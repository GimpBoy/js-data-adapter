{"version":3,"file":"js-data-adapter.js","sources":["../src/index.js"],"sourcesContent":["import {utils} from 'js-data'\n\nconst {\n  addHiddenPropsToTarget,\n  extend,\n  fillIn,\n  get,\n  isArray,\n  isObject,\n  isUndefined,\n  plainCopy,\n  resolve\n} = utils\n\nexport const reserved = [\n  'orderBy',\n  'sort',\n  'limit',\n  'offset',\n  'skip',\n  'where'\n]\n\nconst noop = function (...args) {\n  const self = this\n  const opts = args[args.length - 1]\n  self.dbg(opts.op, ...args)\n  return resolve()\n}\n\nconst noop2 = function (...args) {\n  const self = this\n  const opts = args[args.length - 2]\n  self.dbg(opts.op, ...args)\n  return resolve()\n}\n\nconst DEFAULTS = {\n  /**\n   * Whether to log debugging information.\n   *\n   * @name Adapter#debug\n   * @type {boolean}\n   * @default false\n   */\n  debug: false,\n\n  /**\n   * Whether to return a more detailed response object.\n   *\n   * @name Adapter#raw\n   * @type {boolean}\n   * @default false\n   */\n  raw: false\n}\n\n/**\n * Response object used when `raw` is `true`. May contain other fields in\n * addition to `data`.\n *\n * @typedef {Object} Response\n * @property {Object} data Response data.\n * @property {string} op The operation for which the response was created.\n */\n\nexport function Response (data, meta, op) {\n  const self = this\n  self.data = data\n  fillIn(self, meta)\n  self.op = op\n}\n\n/**\n * Abstract class meant to be extended by adapters.\n *\n * @class Adapter\n * @abstract\n * @param {Object} [opts] Configuration opts.\n * @param {boolean} [opts.debug=false] Whether to log debugging information.\n * @param {boolean} [opts.raw=false] Whether to return a more detailed response\n * object.\n */\nexport default function Adapter (opts) {\n  const self = this\n  opts || (opts = {})\n  fillIn(opts, DEFAULTS)\n  fillIn(self, opts)\n}\n\n/**\n * Alternative to ES6 class syntax for extending `Adapter`.\n *\n * @name Adapter.extend\n * @method\n * @param {Object} [instanceProps] Properties that will be added to the\n * prototype of the subclass.\n * @param {Object} [classProps] Properties that will be added as static\n * properties to the subclass itself.\n * @return {Object} Subclass of `Adapter`.\n */\nAdapter.extend = extend\n\naddHiddenPropsToTarget(Adapter.prototype, {\n  /**\n   * Lifecycle method method called by <a href=\"#create__anchor\">create</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#create__anchor\">create</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the created record.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#create__anchor\">create</a>.\n   *\n   * @name Adapter#afterCreate\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @property {string} opts.op `afterCreate`\n   * @param {Object|Response} response Created record or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterCreate: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#createMany__anchor\">createMany</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#createMany__anchor\">createMany</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the created records.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#createMany__anchor\">createMany</a>.\n   *\n   * @name Adapter#afterCreate\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @param {Object[]} props The `props` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @property {string} opts.op `afterCreateMany`\n   * @param {Object[]|Response} response Created records or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterCreateMany: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#destroy__anchor\">destroy</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#destroy__anchor\">destroy</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be `undefined`.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#destroy__anchor\">destroy</a>.\n   *\n   * @name Adapter#afterDestroy\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @property {string} opts.op `afterDestroy`\n   * @param {undefined|Response} response `undefined` or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterDestroy: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#destroyAll__anchor\">destroyAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be `undefined`.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   *\n   * @name Adapter#afterDestroyAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @property {string} opts.op `afterDestroyAll`\n   * @param {undefined|Response} response `undefined` or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterDestroyAll: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#find__anchor\">find</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#find__anchor\">find</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the found record, if any.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#find__anchor\">find</a>.\n   *\n   * @name Adapter#afterFind\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @property {string} opts.op `afterFind`\n   * @param {Object|Response} response The found record or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterFind: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#findAll__anchor\">findAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#findAll__anchor\">findAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the found records, if any.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#findAll__anchor\">findAll</a>.\n   *\n   * @name Adapter#afterFindAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @property {string} opts.op `afterFindAll`\n   * @param {Object[]|Response} response The found records or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterFindAll: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#update__anchor\">update</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#update__anchor\">update</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the updated record.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#update__anchor\">update</a>.\n   *\n   * @name Adapter#afterUpdate\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @property {string} opts.op `afterUpdate`\n   * @param {Object|Response} response The updated record or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterUpdate: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#updateAll__anchor\">updateAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#updateAll__anchor\">updateAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the updated records, if any.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#updateAll__anchor\">updateAll</a>.\n   *\n   * @name Adapter#afterUpdateAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @property {string} opts.op `afterUpdateAll`\n   * @param {Object[]|Response} response The updated records or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterUpdateAll: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#updateMany__anchor\">updateMany</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#updateMany__anchor\">updateMany</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the updated records, if any.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#updateMany__anchor\">updateMany</a>.\n   *\n   * @name Adapter#afterUpdateMany\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @param {Object[]} records The `records` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @property {string} opts.op `afterUpdateMany`\n   * @param {Object[]|Response} response The updated records or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterUpdateMany: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#create__anchor\">create</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#create__anchor\">create</a> to wait for the Promise to resolve before continuing.\n   *\n   * `props` may be modified. You can also re-assign `props` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#create__anchor\">create</a>.\n   *\n   * @name Adapter#beforeCreate\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @property {string} opts.op `beforeCreate`\n   */\n  beforeCreate: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#createMany__anchor\">createMany</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#createMany__anchor\">createMany</a> to wait for the Promise to resolve before continuing.\n   *\n   * `props` may be modified. You can also re-assign `props` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#createMany__anchor\">createMany</a>.\n   *\n   * @name Adapter#beforeCreateMany\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @param {Object[]} props The `props` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @property {string} opts.op `beforeCreateMany`\n   */\n  beforeCreateMany: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#destroy__anchor\">destroy</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#destroy__anchor\">destroy</a> to wait for the Promise to resolve before continuing.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#destroy__anchor\">destroy</a>.\n   *\n   * @name Adapter#beforeDestroy\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @property {string} opts.op `beforeDestroy`\n   */\n  beforeDestroy: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#destroyAll__anchor\">destroyAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   *\n   * @name Adapter#beforeDestroyAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @property {string} opts.op `beforeDestroyAll`\n   */\n  beforeDestroyAll: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#find__anchor\">find</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#find__anchor\">find</a> to wait for the Promise to resolve before continuing.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#find__anchor\">find</a>.\n   *\n   * @name Adapter#beforeFind\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @property {string} opts.op `beforeFind`\n   */\n  beforeFind: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#findAll__anchor\">findAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#findAll__anchor\">findAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#findAll__anchor\">findAll</a>.\n   *\n   * @name Adapter#beforeFindAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @property {string} opts.op `beforeFindAll`\n   */\n  beforeFindAll: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#update__anchor\">update</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#update__anchor\">update</a> to wait for the Promise to resolve before continuing.\n   *\n   * `props` may be modified. You can also re-assign `props` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#update__anchor\">update</a>.\n   *\n   * @name Adapter#beforeUpdate\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @property {string} opts.op `beforeUpdate`\n   */\n  beforeUpdate: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#updateAll__anchor\">updateAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#updateAll__anchor\">updateAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * `props` may be modified. You can also re-assign `props` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#updateAll__anchor\">updateAll</a>.\n   *\n   * @name Adapter#beforeUpdateAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @property {string} opts.op `beforeUpdateAll`\n   */\n  beforeUpdateAll: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#updateMany__anchor\">updateMany</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#updateMany__anchor\">updateMany</a> to wait for the Promise to resolve before continuing.\n   *\n   * `props` may be modified. You can also re-assign `props` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#updateMany__anchor\">updateMany</a>.\n   *\n   * @name Adapter#beforeUpdateMany\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @param {Object[]} props The `props` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @property {string} opts.op `beforeUpdateMany`\n   */\n  beforeUpdateMany: noop,\n\n  /**\n   * Shortcut for `#log('debug'[, arg1[, arg2[, argn]]])`.\n   *\n   * @name Adapter#dbg\n   * @method\n   */\n  dbg (...args) {\n    this.log('debug', ...args)\n  },\n\n  /**\n   * Create a new record.  Called by `Mapper#create`.\n   *\n   * @name Adapter#create\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The record to be created.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  create (mapper, props, opts) {\n    throw new Error('Not supported!')\n  },\n\n  /**\n   * Create multiple records in a single batch. Called by `Mapper#createMany`.\n   *\n   * @name Adapter#createMany\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The records to be created.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  createMany (mapper, props, opts) {\n    throw new Error('Not supported!')\n  },\n\n  /**\n   * Destroy the record with the given primary key. Called by\n   * `Mapper#destroy`.\n   *\n   * @name Adapter#destroy\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id Primary key of the record to destroy.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  destroy (mapper, id, opts) {\n    throw new Error('Not supported!')\n  },\n\n  /**\n   * Destroy the records that match the selection query. Called by\n   * `Mapper#destroyAll`.\n   *\n   * @name Adapter#destroyAll\n   * @method\n   * @param {Object} mapper the mapper.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  destroyAll (mapper, query, opts) {\n    throw new Error('Not supported!')\n  },\n\n  /**\n   * Return the foreignKey from the given record for the provided relationship.\n   *\n   * There may be reasons why you may want to override this method, like when\n   * the id of the parent doesn't exactly match up to the key on the child.\n   *\n   * Override with care.\n   *\n   * @name Adapter#makeHasManyForeignKey\n   * @method\n   * @return {*}\n   */\n  makeHasManyForeignKey (mapper, def, record) {\n    return def.getForeignKey(record)\n  },\n\n  /**\n   * Return the foreignKeys from the given record for the provided relationship.\n   *\n   * Override with care.\n   *\n   * @name Adapter#makeHasManyForeignKeys\n   * @method\n   * @return {*}\n   */\n  makeHasManyForeignKeys (mapper, def, record) {\n    return get(record, mapper.idAttribute)\n  },\n\n  /**\n   * Load a hasMany relationship.\n   *\n   * Override with care.\n   *\n   * @name Adapter#loadHasMany\n   * @method\n   * @return {Promise}\n   */\n  loadHasMany (mapper, def, records, __opts) {\n    const self = this\n    let singular = false\n\n    if (isObject(records) && !isArray(records)) {\n      singular = true\n      records = [records]\n    }\n    const IDs = records.map(function (record) {\n      return self.makeHasManyForeignKey(mapper, def, record)\n    })\n    const query = {}\n    const criteria = query[def.foreignKey] = {}\n    if (singular) {\n      // more efficient query when we only have one record\n      criteria['=='] = IDs[0]\n    } else {\n      criteria['in'] = IDs.filter(function (id) {\n        return id\n      })\n    }\n    return self.findAll(def.getRelation(), query, __opts).then(function (relatedItems) {\n      records.forEach(function (record) {\n        let attached = []\n        // avoid unneccesary iteration when we only have one record\n        if (singular) {\n          attached = relatedItems\n        } else {\n          relatedItems.forEach(function (relatedItem) {\n            if (get(relatedItem, def.foreignKey) === record[mapper.idAttribute]) {\n              attached.push(relatedItem)\n            }\n          })\n        }\n        def.setLocalField(record, attached)\n      })\n    })\n  },\n\n  /**\n   * Load a hasOne relationship.\n   *\n   * Override with care.\n   *\n   * @name Adapter#loadHasOne\n   * @method\n   * @return {Promise}\n   */\n  loadHasOne (mapper, def, records, __opts) {\n    if (isObject(records) && !isArray(records)) {\n      records = [records]\n    }\n    return this.loadHasMany(mapper, def, records, __opts).then(function () {\n      records.forEach(function (record) {\n        const relatedData = def.getLocalField(record)\n        if (isArray(relatedData) && relatedData.length) {\n          def.setLocalField(record, relatedData[0])\n        }\n      })\n    })\n  },\n\n  /**\n   * Return the foreignKey from the given record for the provided relationship.\n   *\n   * Override with care.\n   *\n   * @name Adapter#makeBelongsToForeignKey\n   * @method\n   * @return {*}\n   */\n  makeBelongsToForeignKey (mapper, def, record) {\n    return def.getForeignKey(record)\n  },\n\n  /**\n   * Load a belongsTo relationship.\n   *\n   * Override with care.\n   *\n   * @name Adapter#loadBelongsTo\n   * @method\n   * @return {Promise}\n   */\n  loadBelongsTo (mapper, def, records, __opts) {\n    const self = this\n    const relationDef = def.getRelation()\n\n    if (isObject(records) && !isArray(records)) {\n      const record = records\n      return self.find(relationDef, self.makeBelongsToForeignKey(mapper, def, record), __opts).then(function (relatedItem) {\n        def.setLocalField(record, relatedItem)\n      })\n    } else {\n      const keys = records.map(function (record) {\n        return self.makeBelongsToForeignKey(mapper, def, record)\n      }).filter(function (key) {\n        return key\n      })\n      return self.findAll(relationDef, {\n        where: {\n          [relationDef.idAttribute]: {\n            'in': keys\n          }\n        }\n      }, __opts).then(function (relatedItems) {\n        records.forEach(function (record) {\n          relatedItems.forEach(function (relatedItem) {\n            if (relatedItem[relationDef.idAttribute] === record[def.foreignKey]) {\n              def.setLocalField(record, relatedItem)\n            }\n          })\n        })\n      })\n    }\n  },\n\n  /**\n   * Retrieve the record with the given primary key. Called by `Mapper#find`.\n   *\n   * @name Adapter#find\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id Primary key of the record to retrieve.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @param {string[]} [opts.with=[]] Relations to eager load.\n   * @return {Promise}\n   */\n  find (mapper, id, opts) {\n    throw new Error('Not supported!')\n  },\n\n  /**\n   * Retrieve the records that match the selection query.\n   *\n   * @name Adapter#findAll\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @param {string[]} [opts.with=[]] Relations to eager load.\n   * @return {Promise}\n   */\n  findAll (mapper, query, opts) {\n    throw new Error('Not supported!')\n  },\n\n  /**\n   * Resolve the value of the specified option based on the given options and\n   * this adapter's settings. Override with care.\n   *\n   * @name Adapter#getOpt\n   * @method\n   * @param {string} opt The name of the option.\n   * @param {Object} [opts] Configuration options.\n   * @return {*} The value of the specified option.\n   */\n  getOpt (opt, opts) {\n    opts || (opts = {})\n    return isUndefined(opts[opt]) ? plainCopy(this[opt]) : plainCopy(opts[opt])\n  },\n\n  /**\n   * Logging utility method. Override this method if you want to send log\n   * messages to something other than the console.\n   *\n   * @name Adapter#log\n   * @method\n   * @param {string} level Log level.\n   * @param {...*} values Values to log.\n   */\n  log (level, ...args) {\n    if (level && !args.length) {\n      args.push(level)\n      level = 'debug'\n    }\n    if (level === 'debug' && !this.debug) {\n      return\n    }\n    const prefix = `${level.toUpperCase()}: (Adapter)`\n    if (console[level]) {\n      console[level](prefix, ...args)\n    } else {\n      console.log(prefix, ...args)\n    }\n  },\n\n  /**\n   * @name Adapter#respond\n   * @method\n   * @param {Object} response Response object.\n   * @param {Object} opts Configuration options.\n   * return {Object} If `opts.raw == true` then return `response`, else return\n   * `response.data`.\n   */\n  respond (response, opts) {\n    return this.getOpt('raw', opts) ? response : response.data\n  },\n\n  /**\n   * Apply the given update to the record with the specified primary key. Called\n   * by `Mapper#update`.\n   *\n   * @name Adapter#update\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id The primary key of the record to be updated.\n   * @param {Object} props The update to apply to the record.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  update (mapper, id, props, opts) {\n    throw new Error('Not supported!')\n  },\n\n  /**\n   * Apply the given update to all records that match the selection query.\n   * Called by `Mapper#updateAll`.\n   *\n   * @name Adapter#updateAll\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The update to apply to the selected records.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  updateAll (mapper, props, query, opts) {\n    throw new Error('Not supported!')\n  },\n\n  /**\n   * Update the given records in a single batch. Called by `Mapper#updateMany`.\n   *\n   * @name Adapter#updateMany\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object[]} records The records to update.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  updateMany (mapper, records, opts) {\n    throw new Error('Not supported!')\n  }\n})\n"],"names":["utils"],"mappings":"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"}